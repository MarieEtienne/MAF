[
  {
    "objectID": "references_maf.html",
    "href": "references_maf.html",
    "title": "References",
    "section": "",
    "text": "liste &lt;- \n  readLines('MAF.bib') |&gt; \n  as_tibble() |&gt; \n  filter(stringr::str_detect(value, pattern = '@|keywords')) |&gt; \n  rowid_to_column() %&gt;% \n  mutate(int_part = floor((rowid-1)/2), parity = rowid %% 2) %&gt;% \n  select(-rowid) %&gt;% \n  pivot_wider( values_from = value, names_from = parity, names_prefix = \"key\") |&gt; \n  mutate(key1 = stringr::str_remove(key1, pattern = '@[:alnum:]+\\\\{')) |&gt; \n  mutate(key1 = stringr::str_remove(key1, pattern = ',')) \n  \nmaf_liste &lt;- liste %&gt;% \n  filter(str_detect(key0, 'MAF')) %&gt;% \n  select(key1) %&gt;% \n  pull()\n\nlinear_liste &lt;- liste %&gt;% \n  filter(!str_detect(key0, 'MAF')) %&gt;% \n  select(key1) %&gt;% \n  pull()\n  \nNoCite(bib = myBib, maf_liste)"
  },
  {
    "objectID": "references_maf.html#pour-approfondir-ou-compléter-le-cours",
    "href": "references_maf.html#pour-approfondir-ou-compléter-le-cours",
    "title": "References",
    "section": "Pour approfondir ou compléter le cours",
    "text": "Pour approfondir ou compléter le cours\nCornillon, P., A. Guyader, F. Husson, et al. (2013). Statistiques avec R. Rennes (Presses universitaires de).\nEscofier, B. and J. Pagès (1998). “Analyses factorielles simples et multiples”. In: Dunod, Paris 284, pp. 104-107.\nGégout-Petit, A., M. Maumy-Bertrand, G. Saporta, et al. (2022). Données manquantes. Editions Technip.\nHusson, F. (1999a). Chaîne Youtube. URL: https://www.youtube.com/user/HussonFrancois.\nHusson, F. (1999b). MOOC sur l’analyse de données. URL: https://husson.github.io/MOOC_AnaDo/index.html.\nHusson, F., S. Lê, and J. Pagès (2016). Presses universitaires de Rennes."
  },
  {
    "objectID": "01_intro.html#où-lon-commence-par-parler-de-manchots",
    "href": "01_intro.html#où-lon-commence-par-parler-de-manchots",
    "title": "Méthodes d’Analyse Factorielle",
    "section": "Où l’on commence par parler de manchots",
    "text": "Où l’on commence par parler de manchots\n\nData presentationData descriptionLes questions que l’on se pose\n\n\nFrom the palmerpenguins package, data courtesy of Dr. Kristen Gorman and the Palmer Station, Antarctica LTER.\n\nlibrary(palmerpenguins)\ndata(penguins)\nhead(penguins, n= 10)\n\n# A tibble: 10 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\npenguins &lt;- penguins %&gt;% na.omit() %&gt;% mutate(year=as.factor(year))\n\n\n\nArtwork by @allison_horst\n\n\n\nPoint de vue science des données\n\nComment représenter ces données en perdant le moins d’information ? Visualisation\nToutes les variables sont-elles utiles ? Compression\n\nPoint de vue biologique\n\nQuelles sont les différences morpholgiques entre espèces, entre sexe et entre les îles ?\nExiste-t-il des relations morphométriques ?"
  },
  {
    "objectID": "01_intro.html#représenter-cest-déjà-comprendre",
    "href": "01_intro.html#représenter-cest-déjà-comprendre",
    "title": "Méthodes d’Analyse Factorielle",
    "section": "Représenter c’est déjà comprendre",
    "text": "Représenter c’est déjà comprendre\n\nReprésenter les liens entre variables 2 à 2DANGER\n\n\n\n\npenguins %&gt;%\n  select(species, body_mass_g, ends_with(\"_mm\")) %&gt;% \n  GGally::ggpairs(aes(color = species),\n          columns = c(\"flipper_length_mm\", \"body_mass_g\", \n                      \"bill_length_mm\", \"bill_depth_mm\")) +\n  scale_colour_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\"))\n\n\n\n\n\n\n\n\n\nProjection sur un espace à deux dimensions\n\n\nLe mensonge de la projection"
  },
  {
    "objectID": "01_intro.html#objectifs-de-ce-cours",
    "href": "01_intro.html#objectifs-de-ce-cours",
    "title": "Méthodes d’Analyse Factorielle",
    "section": "Objectifs de ce cours",
    "text": "Objectifs de ce cours\nDécouvrir des méthodes permettant de\n\nTrouver une (ou plusieurs) représentations en 2 dimensions la plus fidèle possible,\nFaire apparaître les liens entre les différentes variables,\nIdentifier les individus qui se ressemblent.\n\nLes ingrédients\n\nun peu de géométrie et d’algèbre linéaire,\nmesurer la quantité d’information présente dans un jeu de données,\nun bon esprit pratique pour bien poser le problème au départ\ndes données bien rangées dans un tableau \\(\\Xbf\\) où\n\nune ligne \\(i\\) correspond à un individu\nune colonne \\(j\\) à une variable \\(X_{ij}\\) la valeur de la variable \\(j\\) mesurée sur l’individu \\(i\\)."
  },
  {
    "objectID": "01_intro.html#un-aperçu-du-type-de-données",
    "href": "01_intro.html#un-aperçu-du-type-de-données",
    "title": "Méthodes d’Analyse Factorielle",
    "section": "Un aperçu du type de données",
    "text": "Un aperçu du type de données\n\nACPAFDACM\n\n\nComprendre les relations entre des variables toutes quantitatives.\nExample\nQuels sont lens entre les différentes variables morphométriques ?\n\n\nX_pca &lt;- penguins %&gt;%select(where(is.numeric)) \nhead(X_pca)\n\n\n# A tibble: 6 × 4\n  bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n1           39.1          18.7               181        3750\n2           39.5          17.4               186        3800\n3           40.3          18                 195        3250\n4           36.7          19.3               193        3450\n5           39.3          20.6               190        3650\n6           38.9          17.8               181        3625\n\n\n\\[\\Xbf \\in \\R^{n\\times d}; \\quad \\Xbf = \\begin{pmatrix}\nx_{1,1} &  \\ldots & x_{1,p} \\\\\n\\vdots & &\\vdots \\\\\nx_{n,1} &  \\ldots & x_{n,p} \\\\\n\\end{pmatrix}.\n\\]\n\n\nComprendre les combinaisons de variables quantitatives qui expliquent les groupes, ou comment visualiser au mieux les différences entre les groupes.\nExample Comment visualiser au mieux les différences morpohologiques entre les espèces ?\n\n\nX_afd &lt;- penguins %&gt;% select(-island, -sex, -year) \nhead(X_afd)\n\n\n# A tibble: 6 × 5\n  species bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  &lt;fct&gt;            &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n1 Adelie            39.1          18.7               181        3750\n2 Adelie            39.5          17.4               186        3800\n3 Adelie            40.3          18                 195        3250\n4 Adelie            36.7          19.3               193        3450\n5 Adelie            39.3          20.6               190        3650\n6 Adelie            38.9          17.8               181        3625\n\n\n\\[ \\Xbf = \\begin{pmatrix}\n\\class{rouge}{y_1} & x_{1,1} &  \\ldots & x_{1,p} \\\\\n\\vdots & &\\vdots \\\\\n\\class{rouge}{y_n} & x_{n,1} &  \\ldots & x_{n,p} \\\\\n\\end{pmatrix}, \\quad x_{ij}\\in\\R,\\  g_i \\in \\mathcal{G} =\\left \\lbrace g_1, \\ldots, g_G\\right \\rbrace.\n\\]\n\n\nOn souhaite étudier les liens entre deux variables qualitatives.\nExample\nComment la répartition entre espèce diffère entre les îles.\n\n\nX_acm &lt;- penguins %&gt;%select(species, island) \nhead(X_acm)\n\n\n# A tibble: 6 × 2\n  species island   \n  &lt;fct&gt;   &lt;fct&gt;    \n1 Adelie  Torgersen\n2 Adelie  Torgersen\n3 Adelie  Torgersen\n4 Adelie  Torgersen\n5 Adelie  Torgersen\n6 Adelie  Torgersen\n\n\n\\[\\Xbf = \\begin{pmatrix}\n\\class{bleu}{a_1} & \\class{orange}{b_1} \\\\\n\\class{bleu}{\\vdots} &\\class{orange}{\\vdots} \\\\\n\\class{bleue}{a_n} & \\class{orange}{b_n} \\\\\n\\end{pmatrix}, \\quad a_{i}\\in \\mathcal{A}, \\ \\#\\mathcal{A}= p,\\quad   b_{i}\\in \\mathcal{B}, \\ \\#\\mathcal{B}= q.  \n\\]"
  },
  {
    "objectID": "01_intro.html#organisation-du-cours",
    "href": "01_intro.html#organisation-du-cours",
    "title": "Méthodes d’Analyse Factorielle",
    "section": "Organisation du cours",
    "text": "Organisation du cours\n\nCes méthodes ont beaucoup de points communs\nComprendre finement l’ACP permet de bien comprendre toutes les extensions suivantes\nLa mise en oeuvre requiert un peu de pratique car il faut faire des choix avisés.\n\nPlan du cours\n\nAnalyse en composante principale\n\nUn exemple d’ACP\n\nComprendre les mécanismes derrière l’ACP (notion d’inertie, distance entre individus, changement de repères, la correlation comme un cosinus)\n\nAnalyse Factorielle multiple AFM : une extension de l’ACP\nAnalyse Factorielle Discriminante : AFD\nAnalyse Factorielle des Correspondances : AFC"
  },
  {
    "objectID": "ACP_images.html",
    "href": "ACP_images.html",
    "title": "ACP for Image Compression",
    "section": "",
    "text": "Loading required package: ggplot2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nPour bien comprendre comment sont décomposées les images en bloc de 16 par 16, on peut créer une matrice avecdes cases numérotées et constater comment elle est transformée.\nUn bloc de 1- pixels est un individu à 16 variables.\ntest_image &lt;- array(1:1024, dim= c(32, 16, 1, 1))\ntest_image_blocks &lt;- extract_blocks_parallel(test_image[,,1,1], block_size = 4)\n\n[1] 29\n\ntest_image\n\n[,12] [,13]\n [1,]    1   33   65   97  129  161  193  225  257   289   321   353   385\n [2,]    2   34   66   98  130  162  194  226  258   290   322   354   386\n [3,]    3   35   67   99  131  163  195  227  259   291   323   355   387\n [4,]    4   36   68  100  132  164  196  228  260   292   324   356   388\n [5,]    5   37   69  101  133  165  197  229  261   293   325   357   389\n [6,]    6   38   70  102  134  166  198  230  262   294   326   358   390\n [7,]    7   39   71  103  135  167  199  231  263   295   327   359   391\n [8,]    8   40   72  104  136  168  200  232  264   296   328   360   392\n [9,]    9   41   73  105  137  169  201  233  265   297   329   361   393\n[10,]   10   42   74  106  138  170  202  234  266   298   330   362   394\n[11,]   11   43   75  107  139  171  203  235  267   299   331   363   395\n[12,]   12   44   76  108  140  172  204  236  268   300   332   364   396\n[13,]   13   45   77  109  141  173  205  237  269   301   333   365   397\n[14,]   14   46   78  110  142  174  206  238  270   302   334   366   398\n[15,]   15   47   79  111  143  175  207  239  271   303   335   367   399\n[16,]   16   48   80  112  144  176  208  240  272   304   336   368   400\n[17,]   17   49   81  113  145  177  209  241  273   305   337   369   401\n[18,]   18   50   82  114  146  178  210  242  274   306   338   370   402\n[19,]   19   51   83  115  147  179  211  243  275   307   339   371   403\n[20,]   20   52   84  116  148  180  212  244  276   308   340   372   404\n[21,]   21   53   85  117  149  181  213  245  277   309   341   373   405\n[22,]   22   54   86  118  150  182  214  246  278   310   342   374   406\n[23,]   23   55   87  119  151  183  215  247  279   311   343   375   407\n[24,]   24   56   88  120  152  184  216  248  280   312   344   376   408\n[25,]   25   57   89  121  153  185  217  249  281   313   345   377   409\n[26,]   26   58   90  122  154  186  218  250  282   314   346   378   410\n[27,]   27   59   91  123  155  187  219  251  283   315   347   379   411\n[28,]   28   60   92  124  156  188  220  252  284   316   348   380   412\n[29,]   29   61   93  125  157  189  221  253  285   317   349   381   413\n[30,]   30   62   94  126  158  190  222  254  286   318   350   382   414\n[31,]   31   63   95  127  159  191  223  255  287   319   351   383   415\n[32,]   32   64   96  128  160  192  224  256  288   320   352   384   416\n      [,14] [,15] [,16]\n [1,]   417   449   481\n [2,]   418   450   482\n [3,]   419   451   483\n [4,]   420   452   484\n [5,]   421   453   485\n [6,]   422   454   486\n [7,]   423   455   487\n [8,]   424   456   488\n [9,]   425   457   489\n[10,]   426   458   490\n[11,]   427   459   491\n[12,]   428   460   492\n[13,]   429   461   493\n[14,]   430   462   494\n[15,]   431   463   495\n[16,]   432   464   496\n[17,]   433   465   497\n[18,]   434   466   498\n[19,]   435   467   499\n[20,]   436   468   500\n[21,]   437   469   501\n[22,]   438   470   502\n[23,]   439   471   503\n[24,]   440   472   504\n[25,]   441   473   505\n[26,]   442   474   506\n[27,]   443   475   507\n[28,]   444   476   508\n[29,]   445   477   509\n[30,]   446   478   510\n[31,]   447   479   511\n[32,]   448   480   512\n\ntest_image_blocks\n\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]\n [1,]    1    2    3    4   33   34   35   36   65    66    67    68    97\n [2,]    5    6    7    8   37   38   39   40   69    70    71    72   101\n [3,]    9   10   11   12   41   42   43   44   73    74    75    76   105\n [4,]   13   14   15   16   45   46   47   48   77    78    79    80   109\n [5,]   17   18   19   20   49   50   51   52   81    82    83    84   113\n [6,]   21   22   23   24   53   54   55   56   85    86    87    88   117\n [7,]   25   26   27   28   57   58   59   60   89    90    91    92   121\n [8,]   29   30   31   32   61   62   63   64   93    94    95    96   125\n [9,]  129  130  131  132  161  162  163  164  193   194   195   196   225\n[10,]  133  134  135  136  165  166  167  168  197   198   199   200   229\n[11,]  137  138  139  140  169  170  171  172  201   202   203   204   233\n[12,]  141  142  143  144  173  174  175  176  205   206   207   208   237\n[13,]  145  146  147  148  177  178  179  180  209   210   211   212   241\n[14,]  149  150  151  152  181  182  183  184  213   214   215   216   245\n[15,]  153  154  155  156  185  186  187  188  217   218   219   220   249\n[16,]  157  158  159  160  189  190  191  192  221   222   223   224   253\n[17,]  257  258  259  260  289  290  291  292  321   322   323   324   353\n[18,]  261  262  263  264  293  294  295  296  325   326   327   328   357\n[19,]  265  266  267  268  297  298  299  300  329   330   331   332   361\n[20,]  269  270  271  272  301  302  303  304  333   334   335   336   365\n[21,]  273  274  275  276  305  306  307  308  337   338   339   340   369\n[22,]  277  278  279  280  309  310  311  312  341   342   343   344   373\n[23,]  281  282  283  284  313  314  315  316  345   346   347   348   377\n[24,]  285  286  287  288  317  318  319  320  349   350   351   352   381\n[25,]  385  386  387  388  417  418  419  420  449   450   451   452   481\n[26,]  389  390  391  392  421  422  423  424  453   454   455   456   485\n[27,]  393  394  395  396  425  426  427  428  457   458   459   460   489\n[28,]  397  398  399  400  429  430  431  432  461   462   463   464   493\n[29,]  401  402  403  404  433  434  435  436  465   466   467   468   497\n[30,]  405  406  407  408  437  438  439  440  469   470   471   472   501\n[31,]  409  410  411  412  441  442  443  444  473   474   475   476   505\n[32,]  413  414  415  416  445  446  447  448  477   478   479   480   509\n      [,14] [,15] [,16]\n [1,]    98    99   100\n [2,]   102   103   104\n [3,]   106   107   108\n [4,]   110   111   112\n [5,]   114   115   116\n [6,]   118   119   120\n [7,]   122   123   124\n [8,]   126   127   128\n [9,]   226   227   228\n[10,]   230   231   232\n[11,]   234   235   236\n[12,]   238   239   240\n[13,]   242   243   244\n[14,]   246   247   248\n[15,]   250   251   252\n[16,]   254   255   256\n[17,]   354   355   356\n[18,]   358   359   360\n[19,]   362   363   364\n[20,]   366   367   368\n[21,]   370   371   372\n[22,]   374   375   376\n[23,]   378   379   380\n[24,]   382   383   384\n[25,]   482   483   484\n[26,]   486   487   488\n[27,]   490   491   492\n[28,]   494   495   496\n[29,]   498   499   500\n[30,]   502   503   504\n[31,]   506   507   508\n[32,]   510   511   512"
  },
  {
    "objectID": "ACP_images.html#peut-on-compresser-les-beatles",
    "href": "ACP_images.html#peut-on-compresser-les-beatles",
    "title": "ACP for Image Compression",
    "section": "Peut on compresser les Beatles ?",
    "text": "Peut on compresser les Beatles ?\nOn va travailler sur la fameuse image de l’album Abbey Road des Beatles.\n\nPour la charger avec R, on utilise le package imager et la fonction load.image. puis la fonction grayscalepour bien s’assurer que l’image est codée en niveaux de gris.\n\nlibrary(imager)\nimage &lt;- load.image('img/abbey_road.jpg')\nimage &lt;- grayscale(image)\ndf_origine &lt;-image %&gt;% as.data.frame\np_origine &lt;- ggplot(df_origine,aes(x,y))+geom_raster(aes(fill=value)) +\n   scale_y_continuous(trans=scales::reverse_trans(), expand = c(0,0)) + ## pour mettre l'image dans le bon sens et supprimer les bors gris\n  scale_x_continuous(expand=c(0,0)) +\n  scale_fill_gradient(low=\"black\",high=\"white\") + ## pour le noir et blanc\n  theme(legend.position = \"none\")\n\np_origine\n\n\n\n\n\n\n\n\nL’objet obtenu est un array dont la première dimension est le nombre de pixels en ligne et la seconde dimension le nombre de pixel en colonnes. La troisème dimension est la profondeur et correspondrait au temps dan sun film par exemple et la dernière dimension est la couleur (on a donc 3 valeurs possibles sur cette dernière dimension dans le cas d’une image RGB et 1 dans le cas d’une image en niveau de gris).\nSi on se concentre sur les deux premières dimensions, on a donc une matrice dont la valeur est le niveau de gris du pixel correspondant.\n\ndim(image)\n\n[1] 1024  768    1    1\n\ngray_channel &lt;- image[,,1,1]\ngray_channel[1,1]\n\n[1] 0.1529412\n\n\nPour rentrer dans le formalisme de l’ACP, on a besoin qu’une ligne soit un individu et une colonne une variable. Ici, le choix nous revient de définir comme on le souhaite ce qu’est un individu et une varaible.\nOn va découper l’image en buffer carré (patch, micro image) de coté \\(bs.\\) Un individu sera un patch et une variable sera le niveau de gris dans un pixel particulier du patch.\nOn a donc \\(bs^2\\) variables et \\(N_{buf} = (height/bs) * (width/bs)\\) buffers/individus.\n\n# Set block size to 4x4\nblock_size &lt;- 4\n\n# Extract blocks for each color channel in parallel\nimage_blocks &lt;- extract_blocks_parallel(gray_channel, block_size)\ndim(image_blocks)\n\n\nRéduction de dimension par ACP\nOn va maintenant mettre en oeuvre une ACP, pour détermnier les composantes principales et on ne gardera quelques composantes pour réduire la dimension. On utilise FactoMineR.\n\nlibrary(FactoMineR)\nimages_pca &lt;- PCA(X = image_blocks, scale.unit = TRUE, ncp = ncol(image_blocks))\n\nLes valeurs propres nous donnent la quantité d’information contenu par chaque composante.\n\neigen_restreint &lt;- images_pca$svd$V\n\nOn constate que la première composante contient à elle toute seule 89.0652348\\(\\%\\) d’inertie. Ce qui signifie qu’en écrivant chaque buffet comme un nombre réel multiplé par le premier buffer on recontruit presque \\(90\\%\\) de l’information. Dans ca cas on a juste besoin de stocker\n\nla matrice \\(1\\times bs^2\\) qui permet de reconstruire les 16 variables initiales avec l’information contenu dans ce premier buffer,\nles coefficients que chaque buffer individu attribue à ce premier buffer, soit \\(N_{buf}\\)\n\nOn passe donc \\(N_{buf} * 16\\) réels à stocker à \\(N_{buf} + bs^2\\) si on ne garde qu’une seule composante ou \\(2 N_{buf} + bs^2\\) si on en garde 2.\nLes vecteurs propres sont donnés par\n\neigen_restreint &lt;- images_pca$svd$V\n\nOn sait q’un vecteur propre correspond à un patch de \\(bc\\times bs\\), on peut donc les visualiser sous cette forme\n\nlist_eigen &lt;- lapply(1:block_size^2, function(i){\n  X_restreint &lt;- matrix(images_pca$svd$V[,i], ncol = 4, nrow = 4)\n  image_eig &lt;- as.cimg(array(X_restreint, dim = c(4,4,1,1)))\n  p &lt;- image_eig %&gt;% as.data.frame() %&gt;% ggplot(aes(x,y))+geom_raster(aes(fill=value)) +\n   scale_y_continuous(trans=scales::reverse_trans(), expand = c(0,0)) + ## pour mettre l'image dans le bon sens et supprimer les bors gris\n  scale_x_continuous(expand=c(0,0)) +\n  scale_fill_gradient(low=\"black\",high=\"white\") + ## pour le noir et blanc\n  theme(legend.position = \"none\") +\ncoord_fixed()\n  return(p)\n}\n)\n\nggarrange(plotlist = list_eigen, ncol = 4)\n\n$`1`\n\n\n\n\n\n\n\n\n\n\n$`2`\n\n\n\n\n\n\n\n\n\n\n$`3`\n\n\n\n\n\n\n\n\n\n\n$`4`\n\n\n\n\n\n\n\n\n\n\nattr(,\"class\")\n[1] \"list\"      \"ggarrange\"\n\n\n\n\nReconstruction avec une seule composante principale\n\nnew_coord &lt;- images_pca$ind$coord\nreconstruction &lt;- new_coord[, 1, drop = FALSE]%*% t(images_pca$svd$V)[1,] \n\nn_row_block &lt;- dim(image)[1]/block_size\nn_col_block &lt;- dim(image)[2]/block_size\n\n\nX_reconstruction_list &lt;- lapply(1:n_col_block, function(j){\n  list_rows &lt;- lapply(1:n_row_block, function(i){\n    matrix( reconstruction[(j-1)*n_row_block + i,], ncol = block_size)\n  })\n  do.call(rbind, list_rows)\n}  \n)\n\nX_reconstruction &lt;- do.call(cbind, X_reconstruction_list)\n\n\ndf_1 &lt;-as.cimg(array(X_reconstruction, dim=dim(image))) %&gt;% as.data.frame\np_1 &lt;- ggplot(df_1,aes(x,y))+geom_raster(aes(fill=value)) +\n   scale_y_continuous(trans=scales::reverse_trans(), expand = c(0,0)) + ## pour mettre l'image dans le bon sens et supprimer les bors gris\n  scale_x_continuous(expand=c(0,0)) +\n  scale_fill_gradient(low=\"black\",high=\"white\") + ## pour le noir et blanc\n  theme(legend.position = \"none\")\n\n\nnew_coord &lt;- images_pca$ind$coord\nreconstruction_2 &lt;- new_coord[, 1:2]%*% t(images_pca$svd$V)[1:2,] \n\nX_reconstruction_list_2 &lt;- lapply(1:n_col_block, function(j){\n  list_rows &lt;- lapply(1:n_row_block, function(i){\n    matrix( reconstruction_2[(j-1)*n_row_block + i,], ncol = block_size)\n  })\n  do.call(rbind, list_rows)\n}  \n)\n\nX_reconstruction_2 &lt;- do.call(cbind, X_reconstruction_list_2)\n\n\ndf_2 &lt;-as.cimg(array(X_reconstruction_2, dim=dim(image))) %&gt;% as.data.frame\np_2 &lt;- ggplot(df_2,aes(x,y))+geom_raster(aes(fill=value)) +\n   scale_y_continuous(trans=scales::reverse_trans(), expand = c(0,0)) + ## pour mettre l'image dans le bon sens et supprimer les bors gris\n  scale_x_continuous(expand=c(0,0)) +\n  scale_fill_gradient(low=\"black\",high=\"white\") + ## pour le noir et blanc\n  theme(legend.position = \"none\")\n\n\n\n\n\n\nOriginal Beatles\n\n\n\n\n\n\n\n\n\nWith 2 principal components\n\n\n\n\n\n\n\n\n\nWith 1 principal component"
  },
  {
    "objectID": "references_linear.html",
    "href": "references_linear.html",
    "title": "References",
    "section": "",
    "text": "liste &lt;- \n  readLines('MAF.bib') |&gt; \n  as_tibble() |&gt; \n  filter(stringr::str_detect(value, pattern = '@|keywords')) |&gt; \n  rowid_to_column() %&gt;% \n  mutate(int_part = floor((rowid-1)/2), parity = rowid %% 2) %&gt;% \n  select(-rowid) %&gt;% \n  pivot_wider( values_from = value, names_from = parity, names_prefix = \"key\") |&gt; \n  mutate(key1 = stringr::str_remove(key1, pattern = '@[:alnum:]+\\\\{')) |&gt; \n  mutate(key1 = stringr::str_remove(key1, pattern = ',')) \n  \nmaf_liste &lt;- liste %&gt;% \n  filter(str_detect(key0, 'MAF')) %&gt;% \n  select(key1) %&gt;% \n  pull()\n\nlinear_liste &lt;- liste %&gt;% \n  filter(!str_detect(key0, 'MAF')) %&gt;% \n  select(key1) %&gt;% \n  pull()\n  \nNoCite(bib = myBib, linear_liste)"
  },
  {
    "objectID": "references_linear.html#pour-mieux-comprendre-lalgèbre-linéaire-utilisé",
    "href": "references_linear.html#pour-mieux-comprendre-lalgèbre-linéaire-utilisé",
    "title": "References",
    "section": "Pour mieux comprendre l’algèbre linéaire utilisé",
    "text": "Pour mieux comprendre l’algèbre linéaire utilisé\nBrunton, S. (2020). Singular Value Decomposition. URL: https://www.youtube.com/watch?v=gXbThCXjZFM.\nCohen, M. X. (2022). Practical linear algebra for data science. O’Reilly Media, Inc.\nHarville, D. A. (1998). Matrix algebra from a statistician’s perspective.\nYoshida, R. (2021). Linear algebra and its applications with R. Chapman and Hall/CRC. URL: https://shainarace.github.io/LinearAlgebra/."
  },
  {
    "objectID": "proj_sur_SVD.html#la-décomposition-en-valeurs-sigulières",
    "href": "proj_sur_SVD.html#la-décomposition-en-valeurs-sigulières",
    "title": "Singular Value Decomposition et ACP",
    "section": "La décomposition en valeurs sigulières",
    "text": "La décomposition en valeurs sigulières\n\\[\\boldsymbol{X} = \\boldsymbol{U}\\boldsymbol{D}\\boldsymbol{V^\\intercal},\\]\noù * \\(\\boldsymbol{U}\\) est une matrice \\(n\\times n\\) orthogonale \\(\\boldsymbol{U} \\boldsymbol{U}^\\intercal = \\boldsymbol{I}_n,\\) * \\(\\boldsymbol{V}\\) est une matrice \\(d\\times d\\) orthogonale \\(\\boldsymbol{V} \\boldsymbol{V}^\\intercal = \\boldsymbol{I}_d,\\) * \\(\\boldsymbol{D}\\) est une matrice \\(n \\times d\\), diagonale au sens où seuls les termes \\(D_{ii}\\) sont non nuls.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: SVD et Changement de Base"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Méthodes d’Analyse factorielle",
    "section": "",
    "text": "Description du cours\nCe cours présente des techniques statistiques pour décire et viusualiser des données multivariés. Il présentera à la fois les fondements mathématiques (géométriques) mais fera surtout la part belle à la mise en oeuvre pratioque de ces outils. A l’issue de ce cours, vous disposerez d’un ensemble de méthodes pour analyser des ensembles de données complexes et créer des représentations visuelles qui révèlent des motifs, des tendances et des relations entre plusieurs variables. Le cours couvre les sujets suivants :\n\n\nContenu\n\nAnalyse en Composantes Principales (ACP) : Un outil puissant de réduction dimensionnelle qui simplifie les grands ensembles de données tout en préservant autant que possible la variation. Les étudiants apprendront à visualiser des données à haute dimension à l’aide de l’ACP, rendant ainsi plus faciles à interpréter les relations complexes. Un extension, l’Analyse Factorielle Multiple (AFM) permet de prendre en compte des variables quantitatives organisées par groupe (on veut distinguer les variables physiques, des variables chimiques par exemple).\nAnalyse Factorielle Discriminante (AFD) : Cette technique aide à classifier les observations dans des groupes prédéfinis. Le cours se concentrera sur la manière de différencier visuellement les groupes en utilisant plusieurs variables prédictives et d’interpréter les résultats.\nAnalyse de Corrélation Multiple (ACM) : Les étudiants exploreront comment évaluer et visualiser les relations entre plusieurs variables quantitatives simultanément, à l’aide de représentations graphiques qui rendent les structures de corrélation claires et instructives.\nAnalyse des Correspondances Multiples (ACM) : En étendant l’analyse des correspondances aux données catégorielles, cette technique permet aux étudiants de visualiser des motifs dans de grands ensembles de données catégorielles, en mettant en évidence des structures sous-jacentes dans un format visuellement interprétable.\n\nLe cours mettra un accent particulier sur la visualisation des ensembles de données multivariés complexes. Les concepts théoriques seront complétés par des exercices pratiques, où les étudiants utiliseront des logiciels statistiques (R, Python, etc.) pour générer des visualisations informatives telles que des biplots, des nuages de points et des matrices de corrélation. Ces outils visuels sont précieux pour communiquer les résultats des analyses multivariées de manière intuitive et accessible.\nÀ la fin du cours, les étudiants seront compétents dans l’application des méthodes multivariées à une variété d’ensembles de données et auront les compétences nécessaires pour créer des visualisations qui transmettent efficacement les insights découverts grâce à l’analyse statistique.\n\n\nOrganisation du cours\n\n12h de cours\n12h de De TD/TP\n\nChaque cours contiendra un exemple détaillé et la mise en oeuvre pratique de la méthode étudiée ainsi que la présentation des concepts mathématiques (essentiellement géométriques) sur lesquels elle repose.\n\n\nPrérequis\nUne connaissance de base des statistiques, de l’algèb.re linéaire et une maîtrise des logiciels statistiques (R ou Python) sont recommandées"
  }
]
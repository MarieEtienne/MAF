# This workflow will build a Docker image
# and push them to a private docker registry when a release tag (i.e.: 1.0.1)
# is pushed to the repository.
#
# It runs on a self hosted runner.
# You can change the runner to 'ubuntu-latest' if you want to use a GitHub hosted runner.
#
# Required actions secrets in the repository:
# - DOCKER_USERNAME: Username for docker registry login
# - DOCKER_PASSWORD: Password for docker registry login
# Script environment variables
env:
  DOCKER_IMAGE_NAME: maf
name: Build and Push Docker image
# Triggers
on:
  # Trigger the action manually from the UI
  workflow_dispatch:
  push:
    branches: 
      - master
    paths:
      - "Dockerfile"
      - ".github/workflows/build-docker.yml"
  pull_request:
    branches:
      - master
    paths:
      - "Dockerfile"
      - ".github/workflows/build-docker.yml"
jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install necessary packages
        run: sudo apt update && sudo apt install -y curl jq
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get latest Docker image version and increment
        id: get_version
        run: |
          # Get all tags from Docker Hub
          TAGS=$(curl -s "https://hub.docker.com/v2/repositories/mpetienne/maf/tags/?page_size=100" | jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+$' | sort -V)
          
          if [ -z "$TAGS" ]; then
            NEW_VERSION="0.1"
          else
            LATEST_VERSION=$(echo "$TAGS" | tail -n 1)
            echo "Latest version found: $LATEST_VERSION"
            
            IFS='.' read -r MAJOR MINOR <<< "$LATEST_VERSION"
            MINOR=$((MINOR + 1))
            NEW_VERSION="${MAJOR}.${MINOR}"
          fi
          
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version will be: $NEW_VERSION"
      - name: Print the version
        id: print_version
        run: echo "$VERSION"
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.VERSION }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
        #   cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache
        #   cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache,mode=max
        